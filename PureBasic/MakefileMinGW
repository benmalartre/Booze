# =============================================================
# PureBasic Alembic MakefileMinGW
# =============================================================

LIBRARY_NAME = PBAlembic

# make sure these are in your path
#
CC          = gcc
C++         = g++
LD          = g++

SRCDIR := .
DSTDIR := .

# settings
#
CFLAGS = -DPLATFORM_WINDOWS \
	 -O3 \
	 -D_LANGUAGE_C_PLUS_PLUS\
	 -DNDEBUG\

C++FLAGS = $(CFLAGS) \
	   -std=c++11 \
	   -fno-gnu-keywords \
	   -Wno-deprecated \
	   -fexceptions\
	   -DUSE_HDF5=0\
	   -DALEMBIC_SHARED_LIBS=0
	   -DBUILDSTATIC=1\
	   -DLINKSTATIC=1\
	   -Wl,--whole-archive

	   
# includes
#
#HDF_INCLUDES = /usr/local/include
ILM_INCLUDES = D:\Projects\RnD\Alembic\ilmbase
ABC_INCLUDES = D:\Projects\RnD\Alembic\alembic\lib
BOOZE_INCLUDES = ..\Framework
#-I$(HDF_INCLUDES)
INCLUDES = -I$(ILM_INCLUDES) -I$(ABC_INCLUDES)  -I$(BOOZE_INCLUDES)

# libraries
#
#HDF_PATH = /usr/local/lib
ILM_PATH = D:\Projects\RnD\Alembic\ilmbase\lib
ABC_PATH = D:\Projects\RnD\Alembic\alembic\build\lib\Alembic
FRAMEWORK_PATH = ..\Framework


LIBS = -lAbcFramework
LIBS += -lAlembic
LIBS += -lHalf
LIBS += -lIex
LIBS += -lIexMath
LIBS += -lImath
LIBS += -lIlmThread


#LIBS += -lhdf5
LIBS += -lz
LIBS += -lm 
#	BaseExLIBS += -lsz



LIBS_PATH = -L$(ILM_PATH) -L$(FRAMEWORK_PATH) -L$(ABC_PATH)
#-L$(HDF_PATH)

LDFLAGS += -shared

# infos
#
MSG1 = "== Compile $(LIBRARY_NAME)"
MSG2 = "==  CC      $(CC)"
MSG3 = "==  C++     $(C++)"

# variable definitions
#
SOURCES = $(SRCDIR)/../../../openexr/IlmBase/Iex/IexBaseExc.cpp 
SOURCES += $(SRCDIR)/PBAlembicArchive.cpp 
SOURCES += $(SRCDIR)/PBAlembicObject.cpp 
SOURCES += $(SRCDIR)/PBAlembicXForm.cpp 
SOURCES += $(SRCDIR)/PBAlembicPolymesh.cpp 
SOURCES += $(SRCDIR)/PBAlembicPointCloud.cpp 
SOURCES += $(SRCDIR)/PBAlembicAttribute.cpp 

OBJECTS  := $(patsubst %.cpp,$(DSTDIR)/%.o,$(SOURCES))

DYNAMIC_LIB := $(LIBRARY_NAME).so
MAKEFILE := $(SRCDIR)/MakefileMinGW

# target specific flags.
#
$(OBJECTS): CFLAGS   := $(CFLAGS)
$(OBJECTS): C++FLAGS := $(C++FLAGS)
$(OBJECTS): INCLUDES := $(INCLUDES)

DEPENDS:     INCLUDES := $(INCLUDES)


# rules definitions
#
.PHONY:	all depend clean print

all:
	+@$(MAKE) -f $(MAKEFILE) print
	+@$(MAKE) -f $(MAKEFILE) $(DYNAMIC_LIB)

print:
	@echo $(MSG1)
	@echo $(MSG2)
	@echo $(MSG3)

%.o :	%.c
	$(CC) -c $(INCLUDES) $(CFLAGS) $< -o $@

%.o :	%.cpp
	@echo INCLUDES : $(INCLUDES)
	@echo "Compiling $< ..."
	$(C++) -c $(INCLUDES) $(C++FLAGS) $< -o $@

%.i :	%.cpp
	$(C++) -E $(INCLUDES) $(C++FLAGS) $*.cpp > $*.i

$(DYNAMIC_LIB): $(OBJECTS)
	$(LD) $(LIBS_PATH) -o $@ $(LDFLAGS) $^ $(LIBS)

depend:
	makedepend $(INCLUDES) $(MDFLAGS) -f$(MAKEFILE) $(SOURCES)

clean:
	rm -rf *.o *.gah *.so